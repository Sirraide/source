// R %srcc --eval %s
program test;

proc arith(int a, int b) {
    __srcc_print(a, ", ", b, "\n");
    __srcc_print(a + b, "\n");
    __srcc_print(a +~ b, "\n");
    __srcc_print(a +| b, "\n");

    __srcc_print(a - b, "\n");
    __srcc_print(a -~ b, "\n");
    __srcc_print(a -| b, "\n");

    __srcc_print(a * b, "\n");
    __srcc_print(a *~ b, "\n");
    __srcc_print(a *| b, "\n");

    __srcc_print(a / b, "\n");
    __srcc_print(a % b, "\n");
    __srcc_print(a :/ b, "\n");
    __srcc_print(a :% b, "\n");

    __srcc_print(a >> b, "\n");
    __srcc_print(a >>> b, "\n");
    __srcc_print(a << b, "\n");
    __srcc_print(a <<< b, "\n");

    __srcc_print(a & b, "\n");
    __srcc_print(a | b, "\n");

    __srcc_print(a < b, "\n");
    __srcc_print(a <= b, "\n");
    __srcc_print(a > b, "\n");
    __srcc_print(a >= b, "\n");

    __srcc_print(a <: b, "\n");
    __srcc_print(a <=: b, "\n");
    __srcc_print(a :> b, "\n");
    __srcc_print(a :>= b, "\n");

    __srcc_print(a == b, "\n");
    __srcc_print(a != b, "\n");

    __srcc_print(a ** b, "\n");
}

proc arith_template($T a, T b) {
    __srcc_print(a, ", ", b, "\n");
    __srcc_print(a + b, "\n");
    __srcc_print(a +~ b, "\n");
    __srcc_print(a +| b, "\n");

    __srcc_print(a - b, "\n");
    __srcc_print(a -~ b, "\n");
    __srcc_print(a -| b, "\n");

    __srcc_print(a * b, "\n");
    __srcc_print(a *~ b, "\n");
    __srcc_print(a *| b, "\n");

    __srcc_print(a / b, "\n");
    __srcc_print(a % b, "\n");
    __srcc_print(a :/ b, "\n");
    __srcc_print(a :% b, "\n");

    __srcc_print(a >> b, "\n");
    __srcc_print(a >>> b, "\n");
    __srcc_print(a << b, "\n");
    __srcc_print(a <<< b, "\n");

    __srcc_print(a & b, "\n");
    __srcc_print(a | b, "\n");

    __srcc_print(a < b, "\n");
    __srcc_print(a <= b, "\n");
    __srcc_print(a > b, "\n");
    __srcc_print(a >= b, "\n");

    __srcc_print(a <: b, "\n");
    __srcc_print(a <=: b, "\n");
    __srcc_print(a :> b, "\n");
    __srcc_print(a :>= b, "\n");

    __srcc_print(a == b, "\n");
    __srcc_print(a != b, "\n");

    __srcc_print(a ** b, "\n");

}

// * 20, 5
// + 25
// + 25
// + 25
// + 15
// + 15
// + 15
// + 100
// + 100
// + 100
// + 4
// + 0
// + 4
// + 0
// + 0
// + 0
// + 640
// + 640
// + 4
// + 21
// + false
// + false
// + true
// + true
// + false
// + false
// + true
// + true
// + false
// + true
// + 3200000
arith(20, 5);

// + 20, 5
// + 25
// + 25
// + 25
// + 15
// + 15
// + 15
// + 100
// + 100
// + 100
// + 4
// + 0
// + 4
// + 0
// + 0
// + 0
// + 640
// + 640
// + 4
// + 21
// + false
// + false
// + true
// + true
// + false
// + false
// + true
// + true
// + false
// + true
// + 3200000
arith_template(20, 5);
