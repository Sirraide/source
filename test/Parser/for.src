// V %srcc --parse --verify %s
program test;
for; // expected-error: Expected expression
for i i; // expected-error: Expected ',', 'in', or 'do'
for i in; // expected-error: Expected expression
for i in }; // expected-error: Expected expression
for i in i;
for i in i do;
for i in i {};
for i in i do {};
for i in 1..=1 do i;
for i in 3 do x;

for enum; // expected-error (Expected identifier after 'for enum') expected-error (Expected expression)
for enum j; // expected-error (Expected 'in')
for enum j in; // expected-error: Expected expression
for enum j i; // expected-error: Expected ',', 'in', or 'do'
for enum j, i; // expected-error: Expected ',', 'in', or 'do'
for enum j, i in; // expected-error: Expected expression
for enum 4, i in r {}; // expected-error: Expected identifier after 'for enum'
for enum j, i in r;
for enum j, i in r do;
for enum j, i in r {};

for enum i in; // expected-error: Expected expression
for enum i in r;
for enum i, in r;

for in; // expected-error: 'for in' is invalid
for in x; // expected-error: 'for in' is invalid
for in x do; // expected-error: 'for in' is invalid

for a b in c, d do {}; // expected-error: Expected ','
for a, b in c d do {}; // expected-error: Expected ','
for a, b, in c, d do {};
for a, b in c, d, do {};
for a, b in c, d;
for a, b in c, d {};
for a, b in c, d do {};
for a, b, c in d, e, f do {};
for enum i, a, b, c in d, e, f do {};

// A side-effect of our (accidental) support for trailing commas is that this is
// prohibited, which is honestly nice because it looks stupid.
for a in c expr_that_is_meant_to_be_the_loop_body; // expected-error: Expected ','
for a in c do expr_that_is_meant_to_be_the_loop_body; // This is what youâ€™re supposed to write.

for i;
for 4;
for 4 do;
for x;
for a b; // expected-error: Expected ',', 'in', or 'do'
for a do b;
for y {};
