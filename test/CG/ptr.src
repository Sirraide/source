// R %srcc --ir %s
program test;

int i;
int^ a = &i;
int^^ b = &a;

a = ^b;
^a = 4;
^^b = 5;
b = &^b;
b = ^&b;
a = &(if true then i else i);

// * proc __src_assert_fail (ptr) external fastcc;
// +
// + proc __src_int_arith_error (ptr) external fastcc;
// +
// + proc __src_main external fastcc {
// +     #0 = 8, align 8
// +     #1 = 8, align 8
// +     #2 = 8, align 8
// +
// + entry:
// +     store #0, i64 0, align 8
// +     store #1, ptr #0, align 8
// +     store #2, ptr #1, align 8
// +     %0 = load ptr, #2, align 8
// +     %1 = load ptr, %0, align 8
// +     store #1, ptr %1, align 8
// +     %2 = load ptr, #1, align 8
// +     store %2, i64 4, align 8
// +     %3 = load ptr, #2, align 8
// +     %4 = load ptr, %3, align 8
// +     store %4, i64 5, align 8
// +     %5 = load ptr, #2, align 8
// +     store #2, ptr %5, align 8
// +     %6 = load ptr, #2, align 8
// +     store #2, ptr %6, align 8
// +     store #1, ptr #0, align 8
// +     ret
// + }
