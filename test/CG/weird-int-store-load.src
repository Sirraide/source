// R %srcc --ir -fno-overflow-checks --target x86_64-unknown-linux %s
program test;

i7 a = 1;
a = a + a;

i13 b = 1;
b = b + b;

i24 c = 1;
c = c + c;

i36 d = 1;
d = d + d;

i72 e = 1;
e = e + e;

i164 f = 1;
f = f + f;

// * proc __src_main external fastcc {
// +     #0 = 1, align 1
// +     #1 = 2, align 2
// +     #2 = 4, align 4
// +     #3 = 8, align 8
// +     #4 = 16, align 8
// +     #5 = 24, align 8
// +
// + entry:
// +     store #0, i8 1, align 1
// +     %0 = load i8, #0, align 1
// +     %1 = trunc i8 %0 to i7
// +     %2 = load i8, #0, align 1
// +     %3 = trunc i8 %2 to i7
// +     %4 = add i7 %1, %3
// +     %5 = sext i7 %4 to i8
// +     store #0, i8 %5, align 1
// +     store #1, i16 1, align 2
// +     %6 = load i16, #1, align 2
// +     %7 = trunc i16 %6 to i13
// +     %8 = load i16, #1, align 2
// +     %9 = trunc i16 %8 to i13
// +     %10 = add i13 %7, %9
// +     %11 = sext i13 %10 to i16
// +     store #1, i16 %11, align 2
// +     store #2, i32 1, align 4
// +     %12 = load i32, #2, align 4
// +     %13 = trunc i32 %12 to i24
// +     %14 = load i32, #2, align 4
// +     %15 = trunc i32 %14 to i24
// +     %16 = add i24 %13, %15
// +     %17 = sext i24 %16 to i32
// +     store #2, i32 %17, align 4
// +     store #3, i64 1, align 8
// +     %18 = load i64, #3, align 8
// +     %19 = trunc i64 %18 to i36
// +     %20 = load i64, #3, align 8
// +     %21 = trunc i64 %20 to i36
// +     %22 = add i36 %19, %21
// +     %23 = sext i36 %22 to i64
// +     store #3, i64 %23, align 8
// +     store #4, i128 1, align 8
// +     %24 = load i128, #4, align 8
// +     %25 = trunc i128 %24 to i72
// +     %26 = load i128, #4, align 8
// +     %27 = trunc i128 %26 to i72
// +     %28 = add i72 %25, %27
// +     %29 = sext i72 %28 to i128
// +     store #4, i128 %29, align 8
// +     store #5, i192 1, align 8
// +     %30 = load i192, #5, align 8
// +     %31 = trunc i192 %30 to i164
// +     %32 = load i192, #5, align 8
// +     %33 = trunc i192 %32 to i164
// +     %34 = add i164 %31, %33
// +     %35 = sext i164 %34 to i192
// +     store #5, i192 %35, align 8
// +     ret
// + }
