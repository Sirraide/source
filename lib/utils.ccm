module;

#include <fmt/format.h>
#include <cstdint>
#include <cstddef>

export module srcc.utils;

export namespace srcc {
using u8 = std::uint8_t;
using u16 = std::uint16_t;
using u32 = std::uint32_t;
using u64 = std::uint64_t;
using usz = std::size_t;
using uptr = std::uintptr_t;

using i8 = std::int8_t;
using i16 = std::int16_t;
using i32 = std::int32_t;
using i64 = std::int64_t;
using isz = std::ptrdiff_t;
using iptr = std::intptr_t;

template <typename ...arguments>
void debug(fmt::format_string<arguments...> fmt, arguments&& ...args) {
    fmt::print(stderr, fmt, std::forward<arguments>(args)...);
    fmt::print(stderr, "\n");
}
}
